# GitHub Actions workflow for E2E Testing
# Place this in .github/workflows/e2e-tests.yml

name: E2E Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  e2e-tests:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: event_management_test
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install server dependencies
      working-directory: ./server
      run: npm ci --legacy-peer-deps

    - name: Install client dependencies (skip puppeteer)
      working-directory: ./client
      run: |
        PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true npm ci --legacy-peer-deps

    - name: Setup test database
      working-directory: ./server
      run: |
        cp .env.template .env
        # Configure test database connection
        echo "DB_HOST=localhost" >> .env
        echo "DB_PORT=3306" >> .env
        echo "DB_USERNAME=root" >> .env
        echo "DB_PASSWORD=root" >> .env
        echo "DB_DATABASE=event_management_test" >> .env
        
    - name: Run database migrations
      working-directory: ./server
      run: npm run typeorm:run

    - name: Start server
      working-directory: ./server
      run: |
        npm run build
        npm run start:prod &
        # Wait for server to be ready
        sleep 10
        curl -f http://localhost:3001/health || exit 1

    - name: Build client
      working-directory: ./client
      run: npm run build

    - name: Start client
      working-directory: ./client
      run: |
        npm run start &
        # Wait for client to be ready
        sleep 10

    - name: Run Cypress E2E tests
      working-directory: ./client
      run: |
        # Install Cypress binary (avoiding puppeteer)
        npx cypress install
        # Run tests
        npm run cypress:run
      env:
        CYPRESS_baseUrl: http://localhost:3000
        CYPRESS_apiUrl: http://localhost:3001

    - name: Upload Cypress screenshots
      uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: cypress-screenshots
        path: client/cypress/screenshots

    - name: Upload Cypress videos
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: cypress-videos
        path: client/cypress/videos

  lighthouse-audit:
    runs-on: ubuntu-latest
    needs: e2e-tests
    if: success()
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Audit URLs using Lighthouse CI
      uses: treosh/lighthouse-ci-action@v10
      with:
        urls: |
          http://localhost:3000
          http://localhost:3000/events
          http://localhost:3000/students
        configPath: './.github/lighthouse/budget.json'
        uploadArtifacts: true
        temporaryPublicStorage: true